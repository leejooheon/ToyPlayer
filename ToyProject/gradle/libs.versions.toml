[versions]
# ksp: https://github.com/google/ksp/releases
# compose-compiler: https://developer.android.com/jetpack/androidx/releases/compose-compiler

# Project
androidGradlePlugin = "8.1.0"
kotlin = "1.8.22"
composeCompiler = "1.4.8"
gms = "4.3.14"

# Compose
composeBom = "2023.06.01"
compose-accompanist = "0.30.1"

# Plugins
ksp = "1.8.0-1.0.9"

# AndroidX
corektx = "1.10.1"
appcompat = "1.6.1"
material = "1.9.0"
constraint = "2.1.4"
multidex = "2.0.1"
lifecycle = "2.6.1"
exoplayer = "1.1.0"
mediarouter = "1.4.0"
splashscreen = "1.0.1"
datastore="1.0.0"
activityCompose = "1.7.2"
constraintLayout = "1.0.1"

# KotlinX
kotlinxCoroutines = "1.7.1"
kotlinxSerialization = "1.5.0"

# JavaX
javaxInject = "1"

# Hilt
hilt = "2.45"
hiltCompose = "1.0.0"
hiltWorker = "1.0.0"

# work
work = "2.8.1"

# Room
room = "2.5.2"

# Network
retrofit = "2.9.0"
retrofit-mock = "2.4.0"
retrofit-interceptor = "5.0.0-alpha.10"
chucker = "3.5.2"
retrofit-serialization-converter = "0.8.0"

# Glide
glide = "4.15.1"
coil = "2.2.2"

# Timber
timber ="5.0.1"

# Ted-permission
tedpermission = "3.3.0"

# Lottie
lottie = "6.0.1"

# FFT
fft = "2.0.0"

# AudioFileIO
jaudiotagger = "2.3.15"

# Test
testJunit = "4.13.2"
# AndroidTest
androidTestJunit = "1.1.5"
androidTestEspresso = "3.5.1"

[libraries]
# Plugins
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
androidx-multidex = { module = "androidx.multidex:multidex", version.ref = "multidex" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-serialization-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
google-gms-plugin = { module = "com.google.gms:google-services", version.ref = "gms"}

# Hilt
hilt-gradle-plugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-android-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltCompose" }
hilt-worker = { module = "androidx.hilt:hilt-work", version.ref = "hiltWorker" }
hilt-worker-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hiltWorker" }

# work
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "work"}
androidx-work-testing = { module = "androidx.work:work-testing", version.ref = "work" }

# Room
androidx-room = { module = "androidx.room:room-runtime", version.ref = "room"}
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "room"}
androidx-room-compile = { module = "androidx.room:room-compiler", version.ref = "room"}

# JavaX
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javaxInject" }

# KotlinX
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

# AndroidX
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "corektx" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-material = { module = "com.google.android.material:material", version.ref = "material" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraint" }

androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle"}

androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidx-constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintLayout" }

androidx-datastore-preference = {module = "androidx.datastore:datastore-preferences", version.ref ="datastore"}


# Compose BOM
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }

# Compose Material
androidx-compose-material = { module = "androidx.compose.material:material" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3" }
androidx-compose-materialWindow = { module = "androidx.compose.material3:material3-window-size-class" }
androidx-compose-material-iconsExtended = { module = "androidx.compose.material:material-icons-extended" }

# Compose Util
androidx-compose-ui-util = { module = "androidx.compose.ui:ui-util" }

# Compose Preview
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }

# Compose preview
#androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose-compiler"}
#androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose-compiler"}
#androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-compiler"}
#androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose-compiler"}

#Compose accompanist  version.ref = "0.25.1"
google-accompanist-insets = { module = "com.google.accompanist:accompanist-insets", version.strictly = "0.25.1"}
google-accompanist-insets-ui = { module = "com.google.accompanist:accompanist-insets-ui", version.strictly = "0.24.11-rc"}
google-accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.strictly = "0.27.0"}
google-accompanist-navigation-animation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "compose-accompanist"}
google-accompanist-navigation-material = { module = "com.google.accompanist:accompanist-navigation-material", version.ref = "compose-accompanist"}
google-accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "compose-accompanist"}

# Media3 - ExoPlayer
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "exoplayer"}
androidx-media3-session = { module = "androidx.media3:media3-session", version.ref = "exoplayer"}
androidx-media3-common = { module = "androidx.media3:media3-common", version.ref = "exoplayer"}

androidx-mediarouter = { module = "androidx.mediarouter:mediarouter", version.ref = "mediarouter"}

# splash
androidx-splash = { module = "androidx.core:core-splashscreen", version.ref = "splashscreen"}

# Network
squareup-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit"}
squareup-retrofit-converter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit"}
squareup-retrofit-mock = { module = "com.squareup.retrofit2:retrofit-mock", version.ref = "retrofit-mock"}
squareup-retrofit-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "retrofit-interceptor"}
jakewharton-serialization-converter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofit-serialization-converter"}
chucker-debug = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker"}
chucker-release = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "chucker"}

# Glide
bumptech-glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide"}
bumptech-glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide"}

# Coil
coil = { module = "io.coil-kt:coil", version.ref = "coil"}
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil"}

# Timber
jakewharton-timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

# Lottie
airbnb-android-lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie"}

# FFT
paramsen-noise = { module = "com.github.paramsen:noise", version.ref = "fft"}

# tedpermission
tedpermission-coroutine = { module = "io.github.ParkSangGwon:tedpermission-coroutine", version.ref = "tedpermission"}

# audioFileIO
jaudiotagger = { module = "com.github.Adonai:jaudiotagger", version.ref = "jaudiotagger" }

# Test
test-junit = { module = "junit:junit", version.ref = "testJunit" }
test-android-junit = { module = "androidx.test.ext:junit", version.ref = "androidTestJunit" }
test-android-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidTestEspresso" }

[plugins]
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }